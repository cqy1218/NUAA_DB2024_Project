--/*实验一：SQL定义功能、数据插入*/

--删除原有表项
DROP TABLE SC;
DROP TABLE Student;
DROP TABLE Course;

--创建新表
CREATE TABLE Student
(Sno CHAR(8) PRIMARY KEY,
Sname CHAR(20) UNIQUE,
Sgender CHAR(4),
Sbirthdate DATE,
Sdept CHAR(20)
);

CREATE TABLE Course
(Cno CHAR(5) PRIMARY KEY,
Cname CHAR(20) UNIQUE,
Ccredit SMALLINT,
Cpno CHAR(5)
);

CREATE TABLE SC
(Sno CHAR(8),
Cno CHAR(5),
Grade SMALLINT CHECK (Grade >= 0 AND Grade <=100),
Semester CHAR(5),
Teachingclass CHAR(15) CHECK (Teachingclass LIKE '%-%'),
PRIMARY KEY (Sno, Cno),
FOREIGN KEY (Sno) REFERENCES Student(Sno),
FOREIGN KEY (Cno) REFERENCES Course(Cno)
);


--创建和删除表格
CREATE TABLE TEST
(TESTTEXT CHAR(20));

DROP TABLE TEST;


--修改表格
ALTER TABLE STUDENT
DROP COLUMN SGENDER;

ALTER TABLE STUDENT
ADD Sgender CHAR(8) CHECK (Sgender IN ('男', '女'));


--创建和删除索引
CREATE INDEX INDEX_STUDENT
ON STUDENT(SBIRTHDATE);

DROP INDEX INDEX_STUDENT;


--插入Student数据
INSERT INTO STUDENT(SNO, SNAME, SGENDER, SBIRTHDATE, SDEPT)
VALUES ('20180001', '李勇', '男',TO_DATE('2000-03-08','YYYY-MM-DD'), '信息安全');

INSERT INTO STUDENT(SNO, SNAME, SGENDER, SBIRTHDATE, SDEPT)
VALUES ('20180002', '刘晨', '女',TO_DATE('1999-09-01','YYYY-MM-DD'), '计算机科学与技术');

INSERT INTO STUDENT(SNO, SNAME, SGENDER, SBIRTHDATE, SDEPT)
VALUES ('20180003', '王敏', '女',TO_DATE('2001-08-01','YYYY-MM-DD'), '计算机科学与技术');

INSERT INTO STUDENT(SNO, SNAME, SGENDER, SBIRTHDATE, SDEPT)
VALUES ('20180004', '张立', '男',TO_DATE('2000-01-08','YYYY-MM-DD'), '计算机科学与技术');

INSERT INTO STUDENT(SNO, SNAME, SGENDER, SBIRTHDATE, SDEPT)
VALUES ('20180005', '陈新奇', '男',TO_DATE('2001-11-01','YYYY-MM-DD'), '信息管理与信息系统');

INSERT INTO STUDENT(SNO, SNAME, SGENDER, SBIRTHDATE, SDEPT)
VALUES ('20180006', '赵明', '男',TO_DATE('2000-06-12','YYYY-MM-DD'), '数据科学与大数据技术');

INSERT INTO STUDENT(SNO, SNAME, SGENDER, SBIRTHDATE, SDEPT)
VALUES ('20180007', '王佳佳', '女',TO_DATE('2001-12-07','YYYY-MM-DD'), '数据科学与大数据技术');

--插入Course数据
INSERT INTO COURSE(CNO, CNAME, CCREDIT, CPNO)
VALUES('81001', '程序设计基础与C语言', 4, NULL);

INSERT INTO COURSE(CNO, CNAME, CCREDIT, CPNO)
VALUES('81002', '数据结构', 4, '81001');

INSERT INTO COURSE(CNO, CNAME, CCREDIT, CPNO)
VALUES('81003', '数据库原理', 4, '81002');

INSERT INTO COURSE(CNO, CNAME, CCREDIT, CPNO)
VALUES('81004', '信息系统概论', 4, '81003');

INSERT INTO COURSE(CNO, CNAME, CCREDIT, CPNO)
VALUES('81005', '操作系统', 4, '81001');

INSERT INTO COURSE(CNO, CNAME, CCREDIT, CPNO)
VALUES('81006', 'Python语言', 3, '81002');

INSERT INTO COURSE(CNO, CNAME, CCREDIT, CPNO)
VALUES('81007', '离散数学', 4, NULL);

INSERT INTO COURSE(CNO, CNAME, CCREDIT, CPNO)
VALUES('81008', '大数据技术概论', 4, '81003');

--插入SC数据
INSERT INTO SC(SNO, CNO, GRADE, SEMESTER, TEACHINGCLASS)
VALUES('20180001', '81001', 85, '20192', '81001-01');

INSERT INTO SC(SNO, CNO, GRADE, SEMESTER, TEACHINGCLASS)
VALUES('20180001', '81002', 96, '20201', '81002-01');

INSERT INTO SC(SNO, CNO, GRADE, SEMESTER, TEACHINGCLASS)
VALUES('20180001', '81003', 87, '20202', '81003-01');

INSERT INTO SC(SNO, CNO, GRADE, SEMESTER, TEACHINGCLASS)
VALUES('20180002', '81001', 80, '20192', '81001-02');

INSERT INTO SC(SNO, CNO, GRADE, SEMESTER, TEACHINGCLASS)
VALUES('20180002', '81002', 98, '20201', '81002-01');

INSERT INTO SC(SNO, CNO, GRADE, SEMESTER, TEACHINGCLASS)
VALUES('20180002', '81003', 71, '20202', '81003-02');

INSERT INTO SC(SNO, CNO, GRADE, SEMESTER, TEACHINGCLASS)
VALUES('20180003', '81001', 81, '20192', '81001-01');

INSERT INTO SC(SNO, CNO, GRADE, SEMESTER, TEACHINGCLASS)
VALUES('20180003', '81002', 76, '20201', '81002-02');

INSERT INTO SC(SNO, CNO, GRADE, SEMESTER, TEACHINGCLASS)
VALUES('20180004', '81001', 56, '20192', '81001-02');

INSERT INTO SC(SNO, CNO, GRADE, SEMESTER, TEACHINGCLASS)
VALUES('20180004', '81003', 97, '20201', '81002-02');

INSERT INTO SC(SNO, CNO, GRADE, SEMESTER, TEACHINGCLASS)
VALUES('20180005', '81003', 68, '20202', '81003-01');


--查看插入数据后的表格内容
SELECT * FROM STUDENT;

SELECT * FROM COURSE;

SELECT * FROM SC;




--/*实验二：数据查询*/

--1.查询选修1号课程的学生学号与姓名。 
SELECT STUDENT.SNO,STUDENT.SNAME
FROM STUDENT, SC
WHERE SC.CNO='81001' AND STUDENT.SNO=SC.SNO;


--2.查询选修课程名为数据库原理的学生学号与姓名。
SELECT STUDENT.SNO, STUDENT.SNAME
FROM STUDENT, COURSE, SC
WHERE COURSE.CNAME='数据库原理' AND COURSE.CNO = SC.CNO AND SC.SNO=STUDENT.SNO;


--3.查询不选1号课程的学生学号与姓名。
SELECT SNO, SNAME
FROM STUDENT
WHERE NOT EXISTS
	(SELECT *
	FROM SC
	WHERE SC.CNO='81001' AND SC.SNO=STUDENT.SNO);


--4.查询学习全部课程学生姓名。 
SELECT SNAME
FROM STUDENT
WHERE NOT EXISTS
	(SELECT *
	FROM COURSE
	WHERE NOT EXISTS
		(SELECT *
		FROM SC
		WHERE SC.SNO=STUDENT.SNO AND SC.CNO=COURSE.CNO));


--5.查询所有学生除了选修1号课程外所有成绩均及格的学生的学号和平均成绩，其结果按平均成绩的降序排列。
SELECT SNO, AVG(GRADE)
FROM SC
HAVING NOT EXISTS 
	(SELECT *
	FROM SC
	WHERE CNO<>'81001' AND GRADE<60)
GROUP BY SNO
ORDER BY AVG(GRADE) DESC;


--6.查询选修数据库原理成绩第2名的学生姓名。
SELECT SNAME
FROM (
	SELECT STUDENT.SNAME
	FROM STUDENT, COURSE, SC
	WHERE COURSE.CNAME='数据库原理' AND COURSE.CNO=SC.CNO AND SC.SNO=STUDENT.SNO
	ORDER BY GRADE DESC)
WHERE ROWNUM<=2
MINUS
SELECT SNAME
FROM (
	SELECT STUDENT.SNAME
	FROM STUDENT, COURSE, SC
	WHERE COURSE.CNAME='数据库原理' AND COURSE.CNO=SC.CNO AND SC.SNO=STUDENT.SNO
	ORDER BY GRADE DESC)
WHERE ROWNUM<=1;


--7.查询所有4个学分课程中有3门以上（含3门）课程获80分以上（含80分）的学生的姓名。 
SELECT SNAME
FROM STUDENT, COURSE, SC
WHERE STUDENT.SNO=SC.SNO AND SC.CNO=COURSE.CNO AND COURSE.CCREDIT=4 AND GRADE>=80
GROUP BY SNAME
HAVING COUNT(*)>=3;


--8.查询选课门数唯一的学生的学号。 
SELECT SNO
FROM SC
GROUP BY SNO
HAVING COUNT(CNO)=1;


--9.SELECT语句中各种查询条件的实验。（见报告）




--/*实验三：数据修改、删除*/

--1.把1号课程的非空成绩提高10％。
SELECT * 
FROM SC 
WHERE CNO = '81001';

CREATE OR REPLACE TRIGGER TRIGGER_GRADE_UP
BEFORE UPDATE ON SC
FOR EACH ROW
BEGIN
IF (:NEW.GRADE > 100) THEN
:NEW.GRADE := 100;
END IF;
END;
/

UPDATE SC
SET GRADE = 1.1 * GRADE 
WHERE CNO = '81001' AND GRADE IS NOT NULL;

SELECT * 
FROM SC 
WHERE CNO = '81001';


--2.在SC表中删除课程名为数据库原理的成绩的元组。 
SELECT *
FROM SC, COURSE
WHERE SC.CNO=COURSE.CNO AND COURSE.CNAME='数据库原理';

DELETE
FROM SC
WHERE CNO=(SELECT CNO
	FROM COURSE
	WHERE CNAME='数据库原理');

SELECT *
FROM SC, COURSE
WHERE SC.CNO=COURSE.CNO AND COURSE.CNAME='数据库原理';


--3.在Student和SC表中删除学号为20180003的所有数据。
SELECT *
FROM STUDENT
WHERE SNO='20180003';
SELECT *
FROM SC
WHERE SNO='20180003';

DELETE
FROM SC
WHERE SNO='20180003';
DELETE
FROM STUDENT
WHERE SNO='20180003';

SELECT *
FROM STUDENT
WHERE SNO='20180003';
SELECT *
FROM SC
WHERE SNO='20180003';


--恢复原表数据
DROP TABLE SC;
DROP TABLE Student;
DROP TABLE Course;
CREATE TABLE Student
(Sno CHAR(8) PRIMARY KEY,
Sname CHAR(20) UNIQUE,
Sgender CHAR(4),
Sbirthdate DATE,
Sdept CHAR(20));
CREATE TABLE Course
(Cno CHAR(5) PRIMARY KEY,
Cname CHAR(20) UNIQUE,
Ccredit SMALLINT,
Cpno CHAR(5));
CREATE TABLE SC
(Sno CHAR(8),
Cno CHAR(5),
Grade SMALLINT CHECK (Grade >= 0 AND Grade <=100),
Semester CHAR(5),
Teachingclass CHAR(15) CHECK (Teachingclass LIKE '%-%'),
PRIMARY KEY (Sno, Cno),
FOREIGN KEY (Sno) REFERENCES Student(Sno),
FOREIGN KEY (Cno) REFERENCES Course(Cno));
ALTER TABLE STUDENT
DROP COLUMN SGENDER;
ALTER TABLE STUDENT
ADD Sgender CHAR(8) CHECK (Sgender IN ('男', '女'));
INSERT INTO STUDENT(SNO, SNAME, SGENDER, SBIRTHDATE, SDEPT)
VALUES ('20180001', '李勇', '男',TO_DATE('2000-03-08','YYYY-MM-DD'), '信息安全');
INSERT INTO STUDENT(SNO, SNAME, SGENDER, SBIRTHDATE, SDEPT)
VALUES ('20180002', '刘晨', '女',TO_DATE('1999-09-01','YYYY-MM-DD'), '计算机科学与技术');
INSERT INTO STUDENT(SNO, SNAME, SGENDER, SBIRTHDATE, SDEPT)
VALUES ('20180003', '王敏', '女',TO_DATE('2001-08-01','YYYY-MM-DD'), '计算机科学与技术');
INSERT INTO STUDENT(SNO, SNAME, SGENDER, SBIRTHDATE, SDEPT)
VALUES ('20180004', '张立', '男',TO_DATE('2000-01-08','YYYY-MM-DD'), '计算机科学与技术');
INSERT INTO STUDENT(SNO, SNAME, SGENDER, SBIRTHDATE, SDEPT)
VALUES ('20180005', '陈新奇', '男',TO_DATE('2001-11-01','YYYY-MM-DD'), '信息管理与信息系统');
INSERT INTO STUDENT(SNO, SNAME, SGENDER, SBIRTHDATE, SDEPT)
VALUES ('20180006', '赵明', '男',TO_DATE('2000-06-12','YYYY-MM-DD'), '数据科学与大数据技术');
INSERT INTO STUDENT(SNO, SNAME, SGENDER, SBIRTHDATE, SDEPT)
VALUES ('20180007', '王佳佳', '女',TO_DATE('2001-12-07','YYYY-MM-DD'), '数据科学与大数据技术');
INSERT INTO COURSE(CNO, CNAME, CCREDIT, CPNO)
VALUES('81001', '程序设计基础与C语言', 4, NULL);
INSERT INTO COURSE(CNO, CNAME, CCREDIT, CPNO)
VALUES('81002', '数据结构', 4, '81001');
INSERT INTO COURSE(CNO, CNAME, CCREDIT, CPNO)
VALUES('81003', '数据库原理', 4, '81002');
INSERT INTO COURSE(CNO, CNAME, CCREDIT, CPNO)
VALUES('81004', '信息系统概论', 4, '81003');
INSERT INTO COURSE(CNO, CNAME, CCREDIT, CPNO)
VALUES('81005', '操作系统', 4, '81001');
INSERT INTO COURSE(CNO, CNAME, CCREDIT, CPNO)
VALUES('81006', 'Python语言', 3, '81002');
INSERT INTO COURSE(CNO, CNAME, CCREDIT, CPNO)
VALUES('81007', '离散数学', 4, NULL);
INSERT INTO COURSE(CNO, CNAME, CCREDIT, CPNO)
VALUES('81008', '大数据技术概论', 4, '81003');
INSERT INTO SC(SNO, CNO, GRADE, SEMESTER, TEACHINGCLASS)
VALUES('20180001', '81001', 85, '20192', '81001-01');
INSERT INTO SC(SNO, CNO, GRADE, SEMESTER, TEACHINGCLASS)
VALUES('20180001', '81002', 96, '20201', '81002-01');
INSERT INTO SC(SNO, CNO, GRADE, SEMESTER, TEACHINGCLASS)
VALUES('20180001', '81003', 87, '20202', '81003-01');
INSERT INTO SC(SNO, CNO, GRADE, SEMESTER, TEACHINGCLASS)
VALUES('20180002', '81001', 80, '20192', '81001-02');
INSERT INTO SC(SNO, CNO, GRADE, SEMESTER, TEACHINGCLASS)
VALUES('20180002', '81002', 98, '20201', '81002-01');
INSERT INTO SC(SNO, CNO, GRADE, SEMESTER, TEACHINGCLASS)
VALUES('20180002', '81003', 71, '20202', '81003-02');
INSERT INTO SC(SNO, CNO, GRADE, SEMESTER, TEACHINGCLASS)
VALUES('20180003', '81001', 81, '20192', '81001-01');
INSERT INTO SC(SNO, CNO, GRADE, SEMESTER, TEACHINGCLASS)
VALUES('20180003', '81002', 76, '20201', '81002-02');
INSERT INTO SC(SNO, CNO, GRADE, SEMESTER, TEACHINGCLASS)
VALUES('20180004', '81001', 56, '20192', '81001-02');
INSERT INTO SC(SNO, CNO, GRADE, SEMESTER, TEACHINGCLASS)
VALUES('20180004', '81003', 97, '20201', '81002-02');
INSERT INTO SC(SNO, CNO, GRADE, SEMESTER, TEACHINGCLASS)
VALUES('20180005', '81003', 68, '20202', '81003-01');




--/*实验四：视图的操作*/

--1.建立男学生的视图，属性包括学号、姓名、选修课程名和成绩。
DROP VIEW MALE;

CREATE VIEW MALE
AS
SELECT STUDENT.SNO, STUDENT.SNAME, COURSE.CNAME, SC.GRADE
FROM STUDENT, COURSE, SC
WHERE STUDENT.SNO=SC.SNO AND COURSE.CNO=SC.CNO AND STUDENT.SGENDER='男'
ORDER BY SNO ASC;

SELECT *
FROM MALE;


--2.在男学生视图中查询平均成绩大于80分的学生学号与姓名。
SELECT SNO, SNAME
FROM MALE
GROUP BY SNO, SNAME
HAVING AVG(GRADE)>80;




--/*实验五：库函数，授权控制*/

--1.计算每个学生有成绩的课程门数、平均成绩。 
SELECT STUDENT.SNO, STUDENT.SNAME, COUNT(SC.CNO), AVG(SC.GRADE)
FROM STUDENT
LEFT JOIN SC ON SC.SNO=STUDENT.SNO AND SC.GRADE IS NOT NULL
GROUP BY STUDENT.SNO, STUDENT.SNAME
ORDER BY STUDENT.SNO ASC;

SET SERVEROUTPUT ON

CREATE OR REPLACE PROCEDURE PRINTGRADES IS
BEGIN
  FOR EACH_STUDENT IN
    (SELECT STUDENT.SNO, STUDENT.SNAME, COUNT(SC.CNO) AS CNO_COUNT, AVG(SC.GRADE) AS GRADE_AVG
    FROM STUDENT
    LEFT JOIN SC ON SC.SNO = STUDENT.SNO AND SC.GRADE IS NOT NULL
    GROUP BY STUDENT.SNO, STUDENT.SNAME
    ORDER BY STUDENT.SNO ASC)
  LOOP
    DBMS_OUTPUT.PUT_LINE('学号：'||EACH_STUDENT.SNO||'  ');
    DBMS_OUTPUT.PUT_LINE('姓名：'||EACH_STUDENT.SNAME||'  ');
    DBMS_OUTPUT.PUT_LINE('有成绩课程数：'||EACH_STUDENT.CNO_COUNT||'  ');
    DBMS_OUTPUT.PUT_LINE('平均成绩：'||EACH_STUDENT.GRADE_AVG||'  ');
    DBMS_OUTPUT.PUT_LINE('--------------------');
  END LOOP;
END PRINTGRADES;
/

BEGIN
	PRINTGRADES;
END;
/


--2.使用GRANT语句，把对基本表S、SC、C的使用权限授给其它用户。 
GRANT ALL PRIVILEGES
ON STUDENT
TO PUBLIC;

GRANT ALL PRIVILEGES
ON COURSE
TO PUBLIC;

GRANT ALL PRIVILEGES
ON SC
TO PUBLIC;


--3.实验完成后，撤消建立的基本表和视图。
DROP TABLE SC;

DROP TABLE STUDENT;

DROP TABLE COURSE;

DROP VIEW MALE;




